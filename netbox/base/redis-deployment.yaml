apiVersion: v1
kind: Service
metadata:
  name: netbox-redis-svc
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: netbox-redis
    app.kubernetes.io/component: datastore
    app.kubernetes.io/part-of: netbox
    app.kubernetes.io/managed-by: argocd
spec:
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: netbox-redis
    app.kubernetes.io/component: datastore
    app.kubernetes.io/part-of: netbox
  ports:
    - port: 6379
      targetPort: redis
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox-redis
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: netbox-redis
    app.kubernetes.io/component: datastore
    app.kubernetes.io/part-of: netbox
    app.kubernetes.io/managed-by: argocd
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: netbox-redis
      app.kubernetes.io/component: datastore
      app.kubernetes.io/part-of: netbox
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/instance: netbox-redis
        app.kubernetes.io/component: datastore
        app.kubernetes.io/part-of: netbox
        app.kubernetes.io/managed-by: argocd
    spec:
      containers:
        - image: redis:7.0.0-alpine
          name: netbox-redis
          args: ["--requirepass", "$(REDIS_HOST_PASSWORD)"]
          ports:
            - containerPort: 6379
              name: redis
              protocol: TCP
          env:
            - name: REDIS_HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: netbox-redis-secret
                  key: password
